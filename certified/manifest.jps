{
  "type": "update",
  "version": "1.6.1",
  "id": "couchbase-auto-cluster",
  "name": "Auto Scalable Couchbase Community Edition Cluster",
  "globals": {
    "user": "admin",
    "pswd": "${fn.password}"
  },
  "baseUrl": "https://raw.githubusercontent.com/jelastic-jps/couchbase/master/certified",
  "nodeGroupAlias": {
    "${targetNodes.nodeGroup}": "nosqldb"
  },
  "onInstall": [
    {
      "cmd[nosqldb]": {
        "user": "root",
        "commands": [
          "node_cleanup"
        ]
      }
    },
    {
      "cmd": {
        "nodeId": "${nodes.nosqldb.master.id}",
        "user": "root",
        "commands": [
          "cluster_init"
        ]
      }
    },
    {
      "forEach(clnode:nodes.nosqldb)": {
        "if (${@clnode.id} != ${nodes.nosqldb.master.id})": {
          "add-node": {
            "id": "${nodes.nosqldb.master.id}",
            "address": "${@clnode.address}"
          }
        }
      }
    },
    {
      "if (nodes.nosqldb.length > 1)": [
        {
          "rebalance": {
            "id": "${nodes.nosqldb.master.id}"
          }
        }
      ]
    },
    {
      "cmd": {
        "nodeId": "${nodes.nosqldb.master.id}",
        "user": "root",
        "commands": [
          "migrate_data"
        ]
      }
    },
    {
      "if (!'${:}' && '${fn.compareEngine(1.6):}' > 0)": {
        "cmd": {
          "nodeId": "${nodes.nosqldb.master.id}",
          "user": "root",
          "commands": [
            "jem passwd set -p ${globals.pswd}"
          ]
        },
        "return": {
          "result": "success",
          "email": "/../text/success.md"
        }
      }
    }
  ],
  "onAfterScaleOut[nosqldb]": [
    {
      "if (nodes.nosqldb.length > 1)": [
        {
          "forEach(clnode:event.response.nodes)": {
            "add-node": {
              "id": "${nodes.nosqldb.master.id}",
              "address": "${@clnode.address}"
            }
          }
        },
        {
          "rebalance": {
            "id": "${nodes.nosqldb.master.id}"
          }
        }
      ]
    }
  ],
  "onBeforeScaleIn[nosqldb]": [
    {
      "forEach(clnode:event.response.nodes)": {
        "remove-node": {
          "id": "${nodes.nosqldb.master.id}",
          "address": "${@clnode.address}"
        }
      }
    },
    {
      "rebalance": {
        "id": "${nodes.nosqldb.master.id}"
      }
    }
  ],
  "onAfterClone": [
    {
      "api": "environment.control.SendEnvCreatedEmail",
      "appid": "${event.response.env.appid}",
      "isImport": true
    },
    {
      "install": {
        "jps": "${baseUrl}/manifest.jps?_r=${fn.random}",
        "envName": "${event.response.env.envName}",
        "nodeGroup": "nosqldb"
      }
    }
  ],
  "actions": {
    "add-node": {
      "cmd[${this.id}]": {
        "user": "root",
        "commands": [
          "retries=30; while [ $retries -gt 0 ]; do couchbase-cli server-add -c 127.0.0.1:8091 -u ${globals.user} -p $(couchpass) --server-add=${this.address}:8091 --server-add-username=${globals.user} --server-add-password=$(couchpass) --services=data,index,query,fts &>/dev/null; [ \"$?\" == 0 ] && break; let retries=${retries}-1; sleep 4; done;"
        ]
      }
    },
    "remove-node": {
      "cmd[${this.id}]": {
        "user": "root",
        "commands": [
          "couchbase-cli rebalance -c 127.0.0.1:8091 -u ${globals.user} -p $(couchpass) --server-remove=${this.address}"
        ]
      }
    },
    "rebalance": {
      "cmd[${this.id}]": {
        "user": "root",
        "commands": [
          "rebalance_cluster"
        ]
      }
    },
    "success": "success"
  }
}
